<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="set_dept_details_pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>